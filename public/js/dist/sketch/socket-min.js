const socket=io.connect(window.location.origin);function emitCloseSketch(){socket.emit("sketch.close")}function emitUploadingImage(e,t){setImageLoadingAvancement(e,t),socket.emit("image.uploading",{uuid:e,avancement:t})}function emitChangedImage(e,t,o){updateImageData(e,t,o),socket.emit("image.changed",{uuid:e,path:t,version:o})}function emitDeleteImage(e){deleteImage(e),socket.emit("image.delete",{uuid:e})}function emitCreateImage(e){socket.emit("image.create",{uuid:e})}function emitChangeDisposition(e,t){moveImage(e,t),socket.emit("disposition.change",{image:e,insertBefore:t,globalDisposition:Array.from(document.querySelectorAll(".image")).map((e=>e.dataset.uuid))})}function emitSwitchDisposition(e,t){switchTo(e),t&&setActive(t,!0),socket.emit("disposition.switchTo",{mode:e,translateTo:t})}function emitTranslateCarousel(e){translateCarousel(e),socket.emit("disposition.translateCarousel",{direction:e})}function emitSetActive(e,t){setActive(e,t),socket.emit("disposition.setActive",{uuid:e,translate:t})}window.addEventListener("focus",(function(){socket.connect()})),socket.on("disconnect",(e=>{"io server disconnect"===e&&socket.connect()})),socket.on("connect",(()=>{console.log("connect"),socket.emit("sketch.join",{sketchCode:document.getElementById("gallery").dataset.sketchCode})})),socket.on("sketch.close",(()=>{window.location.href="/"})),socket.on("connect_error",(e=>{console.log(e)})),window.onunload=window.onbeforeunload=()=>{socket.emit("sketch.leave"),socket.close()},socket.on("image.uploading",(({uuid:e,avancement:t})=>{setImageLoadingAvancement(e,t)})),socket.on("image.changed",(({uuid:e,path:t,version:o})=>{updateImageData(e,t,o)})),socket.on("image.delete",(({uuid:e})=>{deleteImage(e)})),socket.on("image.create",(({uuid:e,path:t,version:o})=>{createImage(e,t,o)})),socket.on("disposition.changed",(({image:e,insertBefore:t})=>{moveImage(e,t)})),socket.on("disposition.switchTo",(({mode:e,translateTo:t})=>{switchTo(e),t&&setActive(t,!0)})),socket.on("disposition.translateCarousel",(({direction:e})=>{translateCarousel(e)})),socket.on("disposition.setActive",(({uuid:e,translate:t})=>{setActive(e,t)}));